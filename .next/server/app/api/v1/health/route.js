(()=>{var e={};e.id=950,e.ids=[950],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},7392:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>h,routeModule:()=>u,serverHooks:()=>l,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{GET:()=>p});var o=r(2706),a=r(8203),n=r(5994),i=r(9187);async function p(){try{let e=process.env.BACKEND_URL||"http://localhost:3000",t=await fetch(`${e}/health`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)return i.NextResponse.json({error:"Backend health check failed"},{status:t.status});let r=await t.json();return i.NextResponse.json(r)}catch(e){return console.error("Health check proxy error:",e),i.NextResponse.json({error:"Failed to connect to backend"},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/v1/health/route",pathname:"/api/v1/health",filename:"route",bundlePath:"app/api/v1/health/route"},resolvedPagePath:"C:\\Users\\dilan\\Documents\\GitHub\\Web-Scrapping-Frontend2\\src\\app\\api\\v1\\health\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:d,serverHooks:l}=u;function h(){return(0,n.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:d})}},6487:()=>{},8335:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[989,452],()=>r(7392));module.exports=s})();