"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/use-polling.ts":
/*!**********************************!*\
  !*** ./src/hooks/use-polling.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePolling: () => (/* binding */ usePolling)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/api */ \"(app-pages-browser)/./src/lib/api.ts\");\n\n\n/**\r\n * Hook personalizado para hacer polling del estado de un batch\r\n * Consulta el backend cada X segundos para obtener el progreso del procesamiento\r\n */ function usePolling(param) {\n    let { batchId, isActive, interval = 3000, onStatusUpdate, onComplete, onError } = param;\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isPollingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"usePolling.useEffect\": ()=>{\n            // Solo iniciar polling si tenemos un batchId y está activo\n            if (!batchId || !isActive || isPollingRef.current) {\n                return;\n            }\n            console.log(\"Starting polling for batch: \".concat(batchId));\n            isPollingRef.current = true;\n            const pollStatus = {\n                \"usePolling.useEffect.pollStatus\": async ()=>{\n                    try {\n                        const status = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.ApiService.getBatchStatus(batchId);\n                        console.log('Polling status update:', status);\n                        // Siempre llamar onStatusUpdate para actualizar el progreso\n                        onStatusUpdate(status);\n                        // Verificar si el procesamiento ha terminado (nuevos estados del backend Node.js)\n                        if (status.status === 'completed') {\n                            console.log('Batch completed successfully');\n                            onComplete(status);\n                            stopPolling();\n                        } else if (status.status === 'completed_with_errors') {\n                            console.log('Batch completed with some errors');\n                            onComplete(status) // Aún mostrar resultados parciales\n                            ;\n                            stopPolling();\n                        }\n                    } catch (error) {\n                        console.error('Polling error:', error);\n                        onError('Failed to check processing status');\n                        stopPolling();\n                    }\n                }\n            }[\"usePolling.useEffect.pollStatus\"];\n            const stopPolling = {\n                \"usePolling.useEffect.stopPolling\": ()=>{\n                    if (intervalRef.current) {\n                        clearInterval(intervalRef.current);\n                        intervalRef.current = null;\n                    }\n                    isPollingRef.current = false;\n                }\n            }[\"usePolling.useEffect.stopPolling\"];\n            // Hacer la primera consulta inmediatamente\n            pollStatus();\n            // Configurar el intervalo para consultas posteriores\n            intervalRef.current = setInterval(pollStatus, interval);\n            // Función de limpieza\n            return ({\n                \"usePolling.useEffect\": ()=>{\n                    console.log('Cleaning up polling');\n                    stopPolling();\n                }\n            })[\"usePolling.useEffect\"];\n        }\n    }[\"usePolling.useEffect\"], [\n        batchId,\n        isActive,\n        interval,\n        onStatusUpdate,\n        onComplete,\n        onError\n    ]);\n    // Función para detener manualmente el polling\n    const stopPolling = ()=>{\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n            intervalRef.current = null;\n        }\n        isPollingRef.current = false;\n    };\n    return {\n        stopPolling\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2UtcG9sbGluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ1U7QUFXbkQ7OztDQUdDLEdBQ00sU0FBU0csV0FBVyxLQU9QO1FBUE8sRUFDekJDLE9BQU8sRUFDUEMsUUFBUSxFQUNSQyxXQUFXLElBQUksRUFDZkMsY0FBYyxFQUNkQyxVQUFVLEVBQ1ZDLE9BQU8sRUFDVyxHQVBPO0lBUXpCLE1BQU1DLGNBQWNULDZDQUFNQSxDQUF3QjtJQUNsRCxNQUFNVSxlQUFlViw2Q0FBTUEsQ0FBQztJQUU1QkQsZ0RBQVNBO2dDQUFDO1lBQ1IsMkRBQTJEO1lBQzNELElBQUksQ0FBQ0ksV0FBVyxDQUFDQyxZQUFZTSxhQUFhQyxPQUFPLEVBQUU7Z0JBQ2pEO1lBQ0Y7WUFFQUMsUUFBUUMsR0FBRyxDQUFDLCtCQUF1QyxPQUFSVjtZQUMzQ08sYUFBYUMsT0FBTyxHQUFHO1lBRXZCLE1BQU1HO21EQUFhO29CQUNqQixJQUFJO3dCQUNGLE1BQU1DLFNBQVMsTUFBTWQsZ0RBQVVBLENBQUNlLGNBQWMsQ0FBQ2I7d0JBQy9DUyxRQUFRQyxHQUFHLENBQUMsMEJBQTBCRTt3QkFFdEMsNERBQTREO3dCQUM1RFQsZUFBZVM7d0JBRWYsa0ZBQWtGO3dCQUNsRixJQUFJQSxPQUFPQSxNQUFNLEtBQUssYUFBYTs0QkFDakNILFFBQVFDLEdBQUcsQ0FBQzs0QkFDWk4sV0FBV1E7NEJBQ1hFO3dCQUNGLE9BQU8sSUFBSUYsT0FBT0EsTUFBTSxLQUFLLHlCQUF5Qjs0QkFDcERILFFBQVFDLEdBQUcsQ0FBQzs0QkFDWk4sV0FBV1EsUUFBUSxtQ0FBbUM7OzRCQUN0REU7d0JBQ0Y7b0JBQ0YsRUFBRSxPQUFPQyxPQUFPO3dCQUNkTixRQUFRTSxLQUFLLENBQUMsa0JBQWtCQTt3QkFDaENWLFFBQVE7d0JBQ1JTO29CQUNGO2dCQUNGOztZQUVBLE1BQU1BO29EQUFjO29CQUNsQixJQUFJUixZQUFZRSxPQUFPLEVBQUU7d0JBQ3ZCUSxjQUFjVixZQUFZRSxPQUFPO3dCQUNqQ0YsWUFBWUUsT0FBTyxHQUFHO29CQUN4QjtvQkFDQUQsYUFBYUMsT0FBTyxHQUFHO2dCQUN6Qjs7WUFFQSwyQ0FBMkM7WUFDM0NHO1lBRUEscURBQXFEO1lBQ3JETCxZQUFZRSxPQUFPLEdBQUdTLFlBQVlOLFlBQVlUO1lBRTlDLHNCQUFzQjtZQUN0Qjt3Q0FBTztvQkFDTE8sUUFBUUMsR0FBRyxDQUFDO29CQUNaSTtnQkFDRjs7UUFDRjsrQkFBRztRQUFDZDtRQUFTQztRQUFVQztRQUFVQztRQUFnQkM7UUFBWUM7S0FBUTtJQUVyRSw4Q0FBOEM7SUFDOUMsTUFBTVMsY0FBYztRQUNsQixJQUFJUixZQUFZRSxPQUFPLEVBQUU7WUFDdkJRLGNBQWNWLFlBQVlFLE9BQU87WUFDakNGLFlBQVlFLE9BQU8sR0FBRztRQUN4QjtRQUNBRCxhQUFhQyxPQUFPLEdBQUc7SUFDekI7SUFFQSxPQUFPO1FBQUVNO0lBQVk7QUFDdkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZGlsYW5cXERvY3VtZW50c1xcR2l0SHViXFxXZWItU2NyYXBwaW5nLUZyb250ZW5kXFxzcmNcXGhvb2tzXFx1c2UtcG9sbGluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBBcGlTZXJ2aWNlLCBCYXRjaFN0YXR1cyB9IGZyb20gJ0AvbGliL2FwaSdcclxuXHJcbmludGVyZmFjZSBVc2VQb2xsaW5nT3B0aW9ucyB7XHJcbiAgYmF0Y2hJZDogc3RyaW5nIHwgbnVsbFxyXG4gIGlzQWN0aXZlOiBib29sZWFuXHJcbiAgaW50ZXJ2YWw/OiBudW1iZXJcclxuICBvblN0YXR1c1VwZGF0ZTogKHN0YXR1czogQmF0Y2hTdGF0dXMpID0+IHZvaWRcclxuICBvbkNvbXBsZXRlOiAoc3RhdHVzOiBCYXRjaFN0YXR1cykgPT4gdm9pZFxyXG4gIG9uRXJyb3I6IChlcnJvcjogc3RyaW5nKSA9PiB2b2lkXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIb29rIHBlcnNvbmFsaXphZG8gcGFyYSBoYWNlciBwb2xsaW5nIGRlbCBlc3RhZG8gZGUgdW4gYmF0Y2hcclxuICogQ29uc3VsdGEgZWwgYmFja2VuZCBjYWRhIFggc2VndW5kb3MgcGFyYSBvYnRlbmVyIGVsIHByb2dyZXNvIGRlbCBwcm9jZXNhbWllbnRvXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlUG9sbGluZyh7XHJcbiAgYmF0Y2hJZCxcclxuICBpc0FjdGl2ZSxcclxuICBpbnRlcnZhbCA9IDMwMDAsIC8vIDMgc2VndW5kb3MgcG9yIGRlZmVjdG9cclxuICBvblN0YXR1c1VwZGF0ZSxcclxuICBvbkNvbXBsZXRlLFxyXG4gIG9uRXJyb3IsXHJcbn06IFVzZVBvbGxpbmdPcHRpb25zKSB7XHJcbiAgY29uc3QgaW50ZXJ2YWxSZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXQgfCBudWxsPihudWxsKVxyXG4gIGNvbnN0IGlzUG9sbGluZ1JlZiA9IHVzZVJlZihmYWxzZSlcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIC8vIFNvbG8gaW5pY2lhciBwb2xsaW5nIHNpIHRlbmVtb3MgdW4gYmF0Y2hJZCB5IGVzdMOhIGFjdGl2b1xyXG4gICAgaWYgKCFiYXRjaElkIHx8ICFpc0FjdGl2ZSB8fCBpc1BvbGxpbmdSZWYuY3VycmVudCkge1xyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZyhgU3RhcnRpbmcgcG9sbGluZyBmb3IgYmF0Y2g6ICR7YmF0Y2hJZH1gKVxyXG4gICAgaXNQb2xsaW5nUmVmLmN1cnJlbnQgPSB0cnVlXHJcblxyXG4gICAgY29uc3QgcG9sbFN0YXR1cyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSBhd2FpdCBBcGlTZXJ2aWNlLmdldEJhdGNoU3RhdHVzKGJhdGNoSWQpXHJcbiAgICAgICAgY29uc29sZS5sb2coJ1BvbGxpbmcgc3RhdHVzIHVwZGF0ZTonLCBzdGF0dXMpXHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gU2llbXByZSBsbGFtYXIgb25TdGF0dXNVcGRhdGUgcGFyYSBhY3R1YWxpemFyIGVsIHByb2dyZXNvXHJcbiAgICAgICAgb25TdGF0dXNVcGRhdGUoc3RhdHVzKVxyXG5cclxuICAgICAgICAvLyBWZXJpZmljYXIgc2kgZWwgcHJvY2VzYW1pZW50byBoYSB0ZXJtaW5hZG8gKG51ZXZvcyBlc3RhZG9zIGRlbCBiYWNrZW5kIE5vZGUuanMpXHJcbiAgICAgICAgaWYgKHN0YXR1cy5zdGF0dXMgPT09ICdjb21wbGV0ZWQnKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnQmF0Y2ggY29tcGxldGVkIHN1Y2Nlc3NmdWxseScpXHJcbiAgICAgICAgICBvbkNvbXBsZXRlKHN0YXR1cylcclxuICAgICAgICAgIHN0b3BQb2xsaW5nKClcclxuICAgICAgICB9IGVsc2UgaWYgKHN0YXR1cy5zdGF0dXMgPT09ICdjb21wbGV0ZWRfd2l0aF9lcnJvcnMnKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnQmF0Y2ggY29tcGxldGVkIHdpdGggc29tZSBlcnJvcnMnKVxyXG4gICAgICAgICAgb25Db21wbGV0ZShzdGF0dXMpIC8vIEHDum4gbW9zdHJhciByZXN1bHRhZG9zIHBhcmNpYWxlc1xyXG4gICAgICAgICAgc3RvcFBvbGxpbmcoKVxyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdQb2xsaW5nIGVycm9yOicsIGVycm9yKVxyXG4gICAgICAgIG9uRXJyb3IoJ0ZhaWxlZCB0byBjaGVjayBwcm9jZXNzaW5nIHN0YXR1cycpXHJcbiAgICAgICAgc3RvcFBvbGxpbmcoKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3RvcFBvbGxpbmcgPSAoKSA9PiB7XHJcbiAgICAgIGlmIChpbnRlcnZhbFJlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbFJlZi5jdXJyZW50KVxyXG4gICAgICAgIGludGVydmFsUmVmLmN1cnJlbnQgPSBudWxsXHJcbiAgICAgIH1cclxuICAgICAgaXNQb2xsaW5nUmVmLmN1cnJlbnQgPSBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhY2VyIGxhIHByaW1lcmEgY29uc3VsdGEgaW5tZWRpYXRhbWVudGVcclxuICAgIHBvbGxTdGF0dXMoKVxyXG5cclxuICAgIC8vIENvbmZpZ3VyYXIgZWwgaW50ZXJ2YWxvIHBhcmEgY29uc3VsdGFzIHBvc3RlcmlvcmVzXHJcbiAgICBpbnRlcnZhbFJlZi5jdXJyZW50ID0gc2V0SW50ZXJ2YWwocG9sbFN0YXR1cywgaW50ZXJ2YWwpXHJcblxyXG4gICAgLy8gRnVuY2nDs24gZGUgbGltcGllemFcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdDbGVhbmluZyB1cCBwb2xsaW5nJylcclxuICAgICAgc3RvcFBvbGxpbmcoKVxyXG4gICAgfVxyXG4gIH0sIFtiYXRjaElkLCBpc0FjdGl2ZSwgaW50ZXJ2YWwsIG9uU3RhdHVzVXBkYXRlLCBvbkNvbXBsZXRlLCBvbkVycm9yXSlcclxuXHJcbiAgLy8gRnVuY2nDs24gcGFyYSBkZXRlbmVyIG1hbnVhbG1lbnRlIGVsIHBvbGxpbmdcclxuICBjb25zdCBzdG9wUG9sbGluZyA9ICgpID0+IHtcclxuICAgIGlmIChpbnRlcnZhbFJlZi5jdXJyZW50KSB7XHJcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxSZWYuY3VycmVudClcclxuICAgICAgaW50ZXJ2YWxSZWYuY3VycmVudCA9IG51bGxcclxuICAgIH1cclxuICAgIGlzUG9sbGluZ1JlZi5jdXJyZW50ID0gZmFsc2VcclxuICB9XHJcblxyXG4gIHJldHVybiB7IHN0b3BQb2xsaW5nIH1cclxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJBcGlTZXJ2aWNlIiwidXNlUG9sbGluZyIsImJhdGNoSWQiLCJpc0FjdGl2ZSIsImludGVydmFsIiwib25TdGF0dXNVcGRhdGUiLCJvbkNvbXBsZXRlIiwib25FcnJvciIsImludGVydmFsUmVmIiwiaXNQb2xsaW5nUmVmIiwiY3VycmVudCIsImNvbnNvbGUiLCJsb2ciLCJwb2xsU3RhdHVzIiwic3RhdHVzIiwiZ2V0QmF0Y2hTdGF0dXMiLCJzdG9wUG9sbGluZyIsImVycm9yIiwiY2xlYXJJbnRlcnZhbCIsInNldEludGVydmFsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-polling.ts\n"));

/***/ })

});